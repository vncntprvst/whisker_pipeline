# Use a DeepLabCut Docker image as the base
ARG CUDA_VERSION
ARG CUDNN_VERSION
ARG DEEPLABCUT_VERSION
ARG UBUNTU_VERSION

FROM deeplabcut/deeplabcut:${DEEPLABCUT_VERSION}-core-cuda${CUDA_VERSION}-cudnn${CUDNN_VERSION}-runtime-ubuntu${UBUNTU_VERSION}-latest

RUN DLC_TAG=${DEEPLABCUT_VERSION}-core-cuda${CUDA_VERSION}-cudnn${CUDNN_VERSION}-runtime-ubuntu${UBUNTU_VERSION}-latest
RUN echo "DLC_TAG: ${DLC_TAG}"

# Add NVIDIA TensorRT repository to install libnvinfer7 and libnvinfer-plugin7
RUN apt-get update -yy \
    && apt-get install -yy --no-install-recommends wget gnupg \
    && wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu${UBUNTU_VERSION}/x86_64/cuda-keyring_1.0-1_all.deb \
    && dpkg -i cuda-keyring_1.0-1_all.deb \
    && wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu${UBUNTU_VERSION}/x86_64/nvidia-machine-learning-repo-ubuntu${UBUNTU_VERSION}_1.0.0-1_all.deb \
    && dpkg -i nvidia-machine-learning-repo-ubuntu${UBUNTU_VERSION}_1.0.0-1_all.deb \
    && apt-get update -yy \
    && apt-get install -yy --no-install-recommends \
       wget gnupg \
       libgtk-3-dev \
       python3-wxgtk4.0 \
       locales \
       libnvinfer7 \
       libnvinfer-plugin7 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && locale-gen en_US.UTF-8 en_GB.UTF-8

# Add ptxas to PATH
# ENV PATH="/usr/local/cuda-11.4/bin:${PATH}"
ENV PATH="/usr/local/cuda-${CUDA_VERSION}/bin:${PATH}"

# Install DeepLabCut (optional)
# ARG DEEPLABCUT_VERSION
# RUN pip3 install --no-cache-dir --upgrade deeplabcut==${DEEPLABCUT_VERSION} \
#  && pip3 list

# Set environment variable for DeepLabCut
ENV DLClight=False

# Set the command to run DeepLabCut (optional)
# CMD ["python3", "-m", "deeplabcut"]

CMD ["bash"]